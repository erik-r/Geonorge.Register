﻿@using Kartverket.Register.Helpers
@model PagedList.IPagedList<Kartverket.Register.Models.Document>
@using Kartverket.Register.Models
@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = Model.ElementAt(0).register.name;
       
} 

@section breadcrumb {
    <li><a href="/register/@Model.ElementAt(0).register.seoname">@Html.DisplayFor(model => model.ElementAt(0).register.name)</a></li>
    <li class="active">@Html.DisplayFor(model => model.ElementAt(0).documentowner.name)</li>
}



<div class="page-header">
    <h2 class="h-md">@Html.DisplayFor(model => Model.ElementAt(0).register.name)</h2>
    <hr>
</div>

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="col-no-padding-xs col-xs-12 col-sm-9 col-md-9 col-lg-9">
        ID: <a href="@Request.Url.AbsoluteUri">@Request.Url.AbsoluteUri</a>
        <img src="@Url.Content("~/data/organizations/" + Model.ElementAt(0).documentowner.logoFilename)" class="img-responsive" alt="@Html.DisplayFor(model => Model.ElementAt(0).documentowner.name)" />
    </div>

    <div class="col-no-padding-xs col-xs-12 col-sm-3 col-md-3 col-lg-3">
        <span class="small">Registrert: @Html.DisplayFor(model => model.ElementAt(0).register.dateSubmitted)</span><br />
        <span class="small">Oppdatert: @Html.DisplayFor(model => model.ElementAt(0).register.modified)</span>

    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="page-header">
            <hr>
        </div>

        <script>
            function SortBy(sort) {
                var sort = document.getElementById("sorting");
                var selected = sort.options[sort.selectedIndex].text;
                document.sortering.submit();
                localStorage['SortingType'] = selected;
            }
        </script>

        <form action="/register/@Model.ElementAt(0).register.seoname/@Model.ElementAt(0).submitter.seoname" name="sortering" method="get">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="col-no-padding-xs col-xs-12 col-sm-10 col-md-10 col-lg-10">
                </div>
                <div class="hidden-xs col-sm-2 col-md-2 col-lg-2" onchange="SortBy()">
                    Sorter: @Html.DropDownList("sorting", "Navn")
                </div>
            </div>
            <br />
        </form>

        <br />

        @foreach (Document item in Model)
        {

            <div class="row result-row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="hidden-xs col-sm-2 col-md-2 col-lg-2 top-padding">
                        @{
            string thumb = "/Content/pdf.jpg";
            if (item.thumbnail != null)
            {
                thumb = item.thumbnail;
            }
                        }
                        <a href="@Html.DisplayFor(modelItem => item.documentUrl)"><img src="@thumb" class="img-responsive center-block img-thumbnail" alt="forside pdf" /></a>

                    </div>
                    <div class="col-no-padding-xs col-xs-12 col-sm-8 col-md-8 col-lg-8">
                        <h4 class="role-button" role="button">
                            <a href="/register/@Html.ToUrl(item.register.name)/@Html.ToUrl(item.documentowner.name)/@Html.ToUrl(item.name)/">@item.name</a>
                        </h4>
                        <p>
                            @*<a href="/dokument/@Html.ToUrl(item.register.name)/@Html.ToUrl(@item.documentowner.name)/">*@
                            <img src="@Url.Content("~/data/organizations/" +  item.documentowner.logoFilename)" class="img-responsive" alt="@Html.DisplayFor(modelItem => item.documentowner.name)" />
                            @*</a>*@
                        </p>
                        <p>
                            @Html.DisplayFor(modelItem => item.description)
                        </p>
                    </div>
                    <div class="col-no-padding-xs col-xs-6 col-sm-2 col-md-2 col-lg-2 ">
                        <a href="@Html.DisplayFor(modelItem => item.documentUrl)" type="button" class="btn btn-lg btn-link">
                            <span class="glyphicon glyphicon-download-alt pull-left"> </span>last ned
                        </a><br />
                        @if (item.status == null)
                        {
                            <span>Status: Ikke angitt</span><br />
                        }
                        else
                        {
                            <span>Status: @item.status.description <i class="statusIcon-@item.statusId"></i></span><br />
                        }
                    </div>
                </div>
            </div>

            <hr />
        }

    </div>


</div>


    <hr />
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

        <div class="text-center">
            Registere viser @Model.FirstItemOnPage - @Model.LastItemOnPage av @Model.TotalItemCount

            @Html.PagedListPager(Model, page => Url.Action("DetailsFilterDocument", new { page, sorting = ViewBag.SortOrder }))
        </div>

        <p>
            <a href="/register/@Html.ToUrl(Model.ElementAt(0).register.name)/">Tilbake</a>
        </p>
    </div>





