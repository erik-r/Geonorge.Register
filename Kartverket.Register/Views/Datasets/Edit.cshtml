@model Kartverket.Register.Models.Dataset
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Rediger " + Model.name;
}
@section Scripts {
    <script>
        //$(document).ready(function () {
        //    $('.date').datepicker({ dateFormat: "dd/mm/yy" });
        //});

        window.onload = function () {
            dokStatus();
        }

        function dokStatus() {
            var dokStatus = document.getElementById('dokStatusId');
            var selected = dokStatus.options[dokStatus.selectedIndex].text;

            if (selected == "Godkjent") {
                document.getElementById('approvalDate').hidden = false;
                enable();
            }
            else {
                document.getElementById('approvalDate').hidden = true;
            }
        }
    </script>
}

@section breadcrumb {
    @if (Model.register.parentRegister != null)
    {
        Kartverket.Register.Models.Register mainRegister = HtmlHelperExtensions.mainRegister(Model.register);
        Kartverket.Register.Models.Register parentRegister = Model.register.parentRegister;
        <li><a href="/register/@mainRegister.seoname/">@mainRegister.name</a></li>
        <li><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname">@Model.register.name</a></li>
        <li>Rediger</li>
        while (parentRegister != null && parentRegister != mainRegister)
        {
            <li><a href="/subregister/@parentRegister.parentRegister.seoname/@parentRegister.parentRegister.owner.seoname/@parentRegister.seoname">@parentRegister.name</a></li>
            parentRegister = parentRegister.parentRegister;
        }
    }
    else
    {
        <li><a href="/register/@Model.register.seoname">@Model.register.name</a></li>
        <li>Rediger</li>
    }
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                Rediger status @Model.name
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.systemId)
@Html.HiddenFor(model => model.registerId)


@using (Html.BeginForm("Edit", "Datasets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.systemId)
    @Html.HiddenFor(model => model.registerId)
    @Html.HiddenFor(model => model.restricted)
    <ul class="nav nav-tabs" style="clear:both">
        <li class="active"><a href="#general" id="generallink" data-toggle="tab">Generelt</a></li>
        <li><a href="#statusvalues" id="statusvalueslink" data-toggle="tab">Statusverdier</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="general">
            <div class="form-horizontal">
                <p>Gå til <a href="@(!string.IsNullOrEmpty(Model.Uuid) ? Html.EditorUrl()+"Metadata/Edit?uuid=" + Model.Uuid : Html.EditorUrl()+"Metadata")" target="_blank">metadataeditoren</a> for å redigere metadata.</p>
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessage("ErrorMessage")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.submitterId, "Innsender", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Request.IsAuthenticated)
                {
                    if (HtmlHelperExtensions.IsAdmin())
                    {
                        <div class="form-group" id="dokStatus">
                            @Html.LabelFor(model => model.dokStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownList("dokStatusId", null, htmlAttributes: new { @onchange = "dokStatus()", @class = "form-control", @id = "dokStatusId" })
                                @Html.ValidationMessageFor(model => model.dokStatusId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="approvalDate">
                            @Html.LabelFor(model => model.dokStatusDateAccepted, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.dokStatusDateAccepted, new { cssClass = "date" })
                                @Html.ValidationMessageFor(model => model.dokStatusDateAccepted, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.datasetownerId, "Datasetteier", htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.datasetowner.name)
                        @Html.DropDownList("datasetownerId", null, htmlAttributes: new { @class = "form-control hidden" })
                        @Html.ValidationMessageFor(model => model.datasetownerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.datasetthumbnail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.datasetthumbnail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @*@Html.ValidationMessageFor(model => model.datasetthumbnail, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ThemeGroupId, "Nasjonal temainndeling", new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ThemeGroupId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSheetUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ProductSheetUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ProductSheetUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PresentationRulesUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PresentationRulesUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.PresentationRulesUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductSpecificationUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ProductSpecificationUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.ProductSpecificationUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MetadataUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MetadataUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.MetadataUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionFormat, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionFormat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionFormat, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistributionArea, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.DistributionArea, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.DistributionArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WmsUrl, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.WmsUrl, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.WmsUrl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Uuid, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Uuid, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Uuid, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SpecificUsage, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.SpecificUsage, 5, 50, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SpecificUsage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextAreaFor(model => model.Notes, 5, 50, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.Hidden("dontUpdateDescription", false)
            </div>
        </div>
        <div class="tab-pane" id="statusvalues">
            <div class="form-horizontal">
                <div class="row">
                    <div class="form-group">
                        <div class="col-md-offset-5 col-md-7">
                            <label>Kommentar</label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryMetadataStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryMetadataStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryMetadataStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryMetadataStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                           @Html.EditorFor(model => model.dokDeliveryMetadataStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryProductSheetStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryProductSheetStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryProductSheetStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryProductSheetStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryProductSheetStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryPresentationRulesStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryPresentationRulesStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryPresentationRulesStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryPresentationRulesStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryPresentationRulesStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryProductSpecificationStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryProductSpecificationStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryProductSpecificationStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryProductSpecificationStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryProductSpecificationStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryWmsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryWmsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryWmsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryWmsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryWmsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryWfsStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryWfsStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryWfsStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryWfsStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryWfsStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryDistributionAreaStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryDistributionAreaStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryDistributionAreaStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryDistributionAreaStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryDistributionAreaStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryDistributionStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryDistributionStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryDistributionStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryDistributionStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryDistributionStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryServiceAlertStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryServiceAlertStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryServiceAlertStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryServiceAlertStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryServiceAlertStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dokDeliveryGeodataLawStatusId, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-2">
                            @Html.DropDownList("dokDeliveryGeodataLawStatusId", null, htmlAttributes: new { @class = "form-control", @id = "dokDeliveryGeodataLawStatusId" })
                            @Html.ValidationMessageFor(model => model.dokDeliveryGeodataLawStatusId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-7">
                            @Html.EditorFor(model => model.dokDeliveryGeodataLawStatusNote, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
            <hr />
            <input type="submit" value="Lagre" class="btn btn-default pull-right" />
            <a href="@Model.GetObjectUrl()">Tilbake</a>
    </div>

}
        


