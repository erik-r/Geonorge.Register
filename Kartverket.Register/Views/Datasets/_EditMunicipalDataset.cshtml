@model Kartverket.Register.Models.Dataset
﻿@using Kartverket.Register.Helpers

@{ 
    Kartverket.Register.Models.CoverageDataset Coverage = HtmlHelperExtensions.GetCoverage(Model);

}

<h2>Rediger</h2>
<h4>@Model.name</h4>
<hr />
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.HiddenFor(model => model.systemId)
@Html.HiddenFor(model => model.registerId)

<div class="row">
    <div class="col-sm-8 col-sm-offset-2">
        <div class="panel panel-info">
            <div class="panel-heading">
                Oppdater datasettet med informasjon fra metadatakatalogen @*<i class="infomessage" title="Påvirker ikke feltene 'Distibusjonsområde', 'Temagruppe', 'WMS-url' og 'Merknad'">(info)</i>*@
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Edit", "Datasets", FormMethod.Post, new { @class = "form-inline" }))
                {
                    <div class="form-group">
                        <div class="col-sm-6">
                            @Html.LabelFor(model => model.Uuid, new { @class = "" })
                            @Html.EditorFor(model => model.Uuid, new { htmlAttributes = new { @class = "form-control", style = "width: 280px; padding:5px" } })
                        </div>
                        <div class="col-sm-2">
                            <small>Ikke oppdater beskrivelse</small>
                            @Html.CheckBox("dontUpdateDescription", false)
                        </div>
                        <div class="col-sm-2">
                            @Html.HiddenFor(model => model.systemId)
                            <input type="submit" value="Oppdater fra metadata" class="btn btn-primary" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Edit", "Datasets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.systemId)
    @Html.HiddenFor(model => model.registerId)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DisplayFor(model => model.name)
                @Html.HiddenFor(model => model.name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.description, new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.description)
                @Html.HiddenFor(model => model.description)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductSheetUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ProductSheetUrl)
                @Html.HiddenFor(model => model.ProductSheetUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PresentationRulesUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PresentationRulesUrl)
                @Html.HiddenFor(model => model.PresentationRulesUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductSpecificationUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ProductSpecificationUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MetadataUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.MetadataUrl)
                @Html.HiddenFor(model => model.MetadataUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DistributionFormat, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DistributionFormat)
                @Html.HiddenFor(model => model.DistributionFormat)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DistributionUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DistributionUrl)
                @Html.HiddenFor(model => model.DistributionUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DistributionArea, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DistributionArea)
                @Html.HiddenFor(model => model.DistributionArea)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.WmsUrl, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.WmsUrl)
                @Html.HiddenFor(model => model.WmsUrl)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.datasetthumbnail, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.datasetthumbnail)
                @Html.HiddenFor(model => model.datasetthumbnail)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ThemeGroupId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ThemeGroupId)
                @Html.HiddenFor(model => model.ThemeGroupId)
            </div>
        </div>

        @if (HtmlHelperExtensions.IsAdmin())
        {
            <div class="form-group">
                @Html.LabelFor(model => model.submitterId, "Innsender", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.datasetownerId, "Datasetteier", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("datasetownerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.datasetownerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="control-label col-md-2">
                    @Html.Label("Bekreftet")
                </div>
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Coverage.ElementAt(0).ConfirmedDok)
                    @Html.ValidationMessage("ErrorMessage")
                </div>
            </div>
        }
        else {
            @Html.HiddenFor(model => model.submitterId)
            @Html.HiddenFor(model => model.datasetownerId)
            @Html.HiddenFor(model => model.Coverage.ElementAt(0).ConfirmedDok)
        }

        <div class="form-group" id="dokStatus">
            @Html.LabelFor(model => model.dokStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("dokStatusId", null, htmlAttributes: new { @onchange = "dokStatus()", @class = "form-control", @id = "dokStatusId" })
                @Html.ValidationMessageFor(model => model.dokStatusId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="approvalDate">
            @Html.LabelFor(model => model.dokStatusDateAccepted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dokStatusDateAccepted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dokStatusDateAccepted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, 5, 50, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Hidden("dontUpdateDescription", false)

        <div class="form-group">
            <hr />
            <input type="submit" value="Lagre" class="btn btn-default pull-right" />
            @if (Model.register.parentRegisterId != null)
            {
                <a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname">Tilbake</a>
            }
            else
            {
                <a href="/register/@Model.register.seoname/@Model.datasetowner.seoname/@Model.seoname/">Tilbake</a>
            }

        </div>
    </div>
}
