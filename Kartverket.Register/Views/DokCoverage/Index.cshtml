@using Kartverket.Register.Models.ViewModels
@model ShowDatasetCoverageViewModel
@{
    ViewBag.Title = "Dekningskart for DOK-datasett";
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                Dekningskart for DOK-datasett
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<form action="@Request.Url.LocalPath" method="get">
    <div class="row">
        <div class="col-md-3">
            <label for="fylke">Velg zoom-nivå:</label>
            <div class="form-group custom-select">
                @Html.DropDownList("fylke", (SelectList)ViewBag.States, "Hele landet", new { @class = "chosen-select form-control", onchange = "form.submit();" })
            </div>
        </div>
        <div class="col-md-5">
            <label for="dataset">Velg DOK-datasett:</label>
            <div class="form-group custom-select">
                @Html.DropDownList("dataset", (SelectList)ViewBag.Datasets, "Velg datasett", new { @class = "chosen-select form-control", onchange = "form.submit();" })
            </div>
        </div>
    </div>
</form>


<p style="color: red;">
    @ViewBag.Warning
</p>

<script type="text/javascript" src="~/Scripts/easyXDM.js"></script>
<div>
    <p class="hidden"><b>This is an iframe pointing to <span id="location">nothing</span>.</b><p>
        <div id="container"></div>
    @*<p><b>These are XDM messages you can send to the iframe:</b></p>*@
    <p id="command"></p>
    @*<p><b>These are XDM messages generated by the iframe:</b></p>*@
    <p id="result"></p>
</div>
<footer></footer>

<script>

    var hash;
    var socket;

    var datasetLayer = "@Model.DatasetWmsLayerName";

    @{
        string zoomLevel = "3";
        if (!string.IsNullOrEmpty(Model.StateName))
        {
            if (Model.StateName == "18") {
                zoomLevel = "5";
            }
            else if (Model.StateName == "04") {
                zoomLevel = "5";
            }
            else if (Model.StateName == "20")
            {
                zoomLevel = "5";
            }
            else {
                zoomLevel = "6";
            }
        }
     }

    var zoomLevel = @zoomLevel;

    var BBWest = @Model.StateBoundingBox.West;
    var BBEast = @Model.StateBoundingBox.East;
    var BBSouth = @Model.StateBoundingBox.South;
    var BBNorth = @Model.StateBoundingBox.North;
    xCenter = (BBWest + BBEast) /2;
    yCenter = (BBSouth + BBNorth) /2;

    $.getJSON('http://norgeskart.no/ws/trans.py?ost=' + xCenter + '&nord=' + yCenter + '&sosiKoordSys=84&resSosiKoordSys=23', function (result) {
        if (result.errKode == 0) {

            xCenter = Math.floor(result.ost);
            yCenter = Math.floor(result.nord);

            console.log("xCenter: " + xCenter);
            console.log("yCenter: " + yCenter);

            hash = "http://norgeskart.no/geoportal/testing/dynamisk.html#" + zoomLevel + "/" + xCenter +"/"+ yCenter +"/l/wms/[http://openwms.statkart.no/skwms1/wms.gp_dek_oversikt?datasett=@Model.DatasetWmsLayerName]"
            console.log(hash);
            document.getElementById('location').innerHTML = hash;
            socket = new easyXDM.Socket({
                remote: hash,
                onMessage: function(message, origin) {
                    var reslist = document.getElementById('result');
                    //reslist.innerHTML=message + "<br/>" + reslist.innerHTML;
                },
                container: document.getElementById("container"),
                onReady: function() {
                    this.container.getElementsByTagName("iframe")[0].style.height = "600px";
                    this.container.getElementsByTagName("iframe")[0].style.width = "600px";
                    AddMarker();
                }
            });

        }
    }
    );



    function postMessage(msg) {
      var message = JSON.stringify(msg);
      socket.postMessage(message);
      var reslist = document.getElementById('command');
      //reslist.innerHTML=message;
    }

    function msgSetCenter() {

        var BBWest = @Model.StateBoundingBox.West;
        var BBEast = @Model.StateBoundingBox.East;
        var BBSouth = @Model.StateBoundingBox.South;
        var BBNorth = @Model.StateBoundingBox.North;
        xCenter = (BBWest + BBEast) /2;
        yCenter = (BBSouth + BBNorth) /2;

        $.getJSON('http://norgeskart.no/ws/trans.py?ost=' + xCenter + '&nord=' + yCenter + '&sosiKoordSys=84&resSosiKoordSys=23', function (result) {
            if (result.errKode == 0) {

                xCenter = Math.floor(result.ost);
                yCenter = Math.floor(result.nord);

                console.log("xCenter: " + xCenter);
                console.log("yCenter: " + yCenter);

                postMessage({"cmd":"setCenter", "x":xCenter, "y":yCenter, "zoom":3});
            }
        }
        );

    }

    function AddMarker()
    {
        @foreach (CoverageConfirmedMunicipalityViewModel municipality in Model.DatasetCoverageConfirmedCounties)
            {
                @:postMessage({ "cmd":"addMarker","x":@municipality.CenterCoordinateX,"y":@municipality.CenterCoordinateY,"title":"@Html.Raw(municipality.Name)"} );
            }
        }

    var counterInterVal = 0;

    function setMarker() {
        if(counterInterVal <= 10) {
            counterInterVal++;
            AddMarker();
        } else {
            clearInterval(myTimer);
        }
    }
    var myTimer = setInterval(setMarker, 1000);

</script>