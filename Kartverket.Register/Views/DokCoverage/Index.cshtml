@using Kartverket.Register.Models.ViewModels
@model ShowDatasetCoverageViewModel
@{
    ViewBag.Title = "Dekningskart for DOK-datasett";
}

<h2>Dekningskart for DOK-datasett</h2>

<form action="@Request.Url.LocalPath" method="get">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group custom-select">
                <label for="fylke" class="sr-only">Velg fylke:</label> @Html.DropDownList("fylke", (SelectList)ViewBag.States, "Hele landet", new { @class = "chosen-select form-control" })
            </div>
        </div>
        <div class="col-md-5">
            <div class="form-group custom-select">
                <label for="dataset" class="sr-only">Velg fylke:</label> @Html.DropDownList("dataset", (SelectList)ViewBag.Datasets, "Velg datasett", new { @class = "chosen-select form-control" })
            </div>
        </div>
        <div class="col-md-3">
            <input type="submit" value="Vis dekningskart for valgte datasett" class="btn btn-default" />
        </div>
    </div>
</form>


<p style="color: red;">
    @ViewBag.Warning
</p>


<div id="map" class="col-sm-12 col-md-12" style="height: 600px;">

</div>

<script type="text/javascript">
    (function() {

        L.Icon.Default.imagePath = '/Content/img/leaflet/';

        var crs = L.CRS.proj4js('EPSG:32633', '+proj=utm +zone=33+ellps=WGS84 +datum=WGS84 +units=m +no_defs', new L.Transformation(1, 2500000, -1, 9045984));
        crs.scale = function(zoom) {
            return 1 / (21674.7100160867 / Math.pow(2, zoom));
        };

        var map = L.map('map', { crs: crs, continuousWorld: true }).setView([64.5, 10], 5);

        var southWest = L.latLng(@Model.StateBoundingBox.South, @Model.StateBoundingBox.West),
            northEast = L.latLng(@Model.StateBoundingBox.North, @Model.StateBoundingBox.East),
            bounds = L.latLngBounds(southWest, northEast);
        map.fitBounds(bounds);

        new L.TileLayer.WMS("https://wms.geonorge.no/skwms1/wms.europa", {
            layers: 'Europa_WMS',
            format: 'image/png',
            attribution: "Kartverket",
            crs: crs
        }).addTo(map);

        new L.TileLayer.WMS("https://wms.geonorge.no/skwms1/wms.topo2", {
            layers: 'topo2_WMS',
            format: 'image/png',
            attribution: "Kartverket",
            version: '1.3.0',
            transparent: true
        }).addTo(map);

        var datasetLayerName = "@Model.DatasetWmsLayerName";
        new L.TileLayer.WMS("https://openwms.statkart.no/skwms1/wms.gp_dek_oversikt?datasett=" + datasetLayerName, {
            layers: 'datasett_dekning',
            format: 'image/png',
            attribution: "Kartverket",
            transparent: true,
            opacity: 0.7
        }).addTo(map);

        var confirmedMunicipalities = [
            @foreach (CoverageConfirmedMunicipalityViewModel municipality in Model.DatasetCoverageConfirmedCounties)
            {
                <text>{centerX: @municipality.CenterCoordinateX, centerY: @municipality.CenterCoordinateY, title: "@Html.Raw(municipality.Name)"},</text>
            }
        ];

        confirmedMunicipalities.forEach(function(item) {
            L.marker(crs.projection.unproject(new L.Point(item.centerX, item.centerY)), {title: "Bekreftet datasett for " + item.title}).addTo(map);
        });

    }());
</script>