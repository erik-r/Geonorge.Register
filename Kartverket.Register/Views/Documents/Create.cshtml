@model Kartverket.Register.Models.Document
﻿@using Kartverket.Register.Helpers
@using System.Web.Configuration

@{
    ViewBag.Title = Documents.TitleCreate;
}

@section breadcrumb {

    @foreach (var register in HtmlHelperExtensions.registers(Model.register))
    {
        <li><a href="@register.GetObjectUrl()">@register.name</a></li>
    }
    <li><a href="@Model.register.GetObjectUrl()">@Html.DisplayFor(model => model.register.name)</a></li>
    @if (!string.IsNullOrEmpty(Model.name)) { 
    <li><a href="@Model.GetObjectUrl()">@Html.DisplayFor(model => model.name)</a></li>
    }
    <li>@Documents.TitleCreate</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                @Documents.TitleCreate
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<form action="@Request.Url.LocalPath" method="post" enctype="multipart/form-data">
    @if (Model.register.parentRegister != null)
    {
        <input type="hidden" value="@Model.register.parentRegister.seoname" id="parentRegister" name="parentRegister" />
    }
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.versionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.versionName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.versionName, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.register.name == "Tegneregler")
        {
        <div class="form-group">
            @Html.LabelFor(model => model.CartographyFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="CartographyFile" name="CartographyFile" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.CartographyFile, "", new { @class = "text-danger" })
            </div>
        </div>
        }

        <div class="form-group">
            <label class="control-label col-md-2" for="documentfile">@Documents.DocumentFile:</label>
            <div class="col-md-10">
                <input type="file" name="documentfile" id="documentfile" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="thumbnail" />
                @Html.ValidationMessageFor(model => model.thumbnail, "", new { @class = "text-danger" })
                @Documents.ThumbnailInfo
            </div>
        </div>
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="@Registers.Propose" class="btn btn-default pull-right" />
        <a href="@Model.register.GetObjectUrl()">@Shared.Back</a>
    </div>
</form>
<script>
    var cartographyFiles;

    function GetCartographyFiles()
    {
        $.getJSON("@WebConfigurationManager.AppSettings["RegistryCartographyUrl"]api/kartografi", function(result){

            cartographyFiles = result;

            $('#CartographyFile').append(new Option("Vennligst velg", "" ));

            $.each(cartographyFiles, function(i, obj) {
                var dataText = obj.DatasetName + ': ' + obj.Name;
                var dataValue = obj.FileUrl;
                $('#CartographyFile').append(new Option(dataText, dataValue ));
            });

        });
    }

    GetCartographyFiles();
</script>
