@model Kartverket.Register.Models.Document
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Rediger " + Model.name;
}

<script>
    $(document).ready(function () {
        $('.date').datepicker({ dateFormat: "dd/mm/yy" });
    });
</script>

@section breadcrumb {

    @if (Model.register.parentRegisterId != null)
    {
        Kartverket.Register.Models.Register mainRegister = HtmlHelperExtensions.mainRegister(Model.register);
        Kartverket.Register.Models.Register parentRegister = Model.register.parentRegister;
        <li><a href="/register/@mainRegister.seoname/">@mainRegister.name</a></li>
        <li class="active pull-right">Rediger</li>
        <li class="pull-right"><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname/@Model.documentowner.seoname/@Model.seoname">@Model.name</a></li>
        <li class="pull-right"><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname">@Model.register.name</a></li>
        while (parentRegister != null && parentRegister != mainRegister)
        {
            <li class="pull-right"><a href="/subregister/@parentRegister.parentRegister.seoname/@parentRegister.parentRegister.owner.seoname/@parentRegister.seoname">@parentRegister.name</a></li>
            parentRegister = parentRegister.parentRegister;
        }
    }
    else
    {
        <li><a href="/register/@Model.register.seoname">@Html.DisplayFor(model => model.register.name)</a></li>
        <li><a href="/register/versjoner/@Model.register.seoname/@Model.documentowner.seoname/@Model.seoname">@Html.DisplayFor(model => model.name)</a></li>
        <li class="active">Rediger</li>
    }
}

<h2>Rediger</h2>
<h4>@Model.name</h4>
<hr />

@using (Html.BeginForm("Edit", "Documents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.systemId)
        @Html.HiddenFor(model => model.registerId)
        @Html.HiddenFor(model => model.versionNumber)
        @Html.HiddenFor(model => model.versioningId)

        @if (Model.statusId != null && (Model.status.group == "current" || Model.status.group == "historical"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Accepted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.Accepted, "true") Ja
                </div>
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.Accepted, "false") Nei
                </div>
            </div>

            <div class="form-group input-accepted">
                @Html.LabelFor(model => model.dateAccepted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dateAccepted, DateTime.Today.ToString(), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateAccepted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group input-accepted">
                @Html.LabelFor(model => model.approvalDocument, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.approvalDocument, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.approvalDocument, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group input-accepted">
                @Html.LabelFor(model => model.approvalReference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.approvalReference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.approvalReference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.statusId, "Status:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.name)
            @Html.HiddenFor(model => model.description)
            @Html.HiddenFor(model => model.documentownerId)
            @Html.HiddenFor(model => model.submitterId)
            @Html.HiddenFor(model => model.thumbnail)
            @Html.HiddenFor(model => model.documentUrl)
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("ErrorMessage")
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.submitterId, "Innsender:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.documentownerId, "Eier:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("documentownerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.documentownerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="thumbnail" />@Model.thumbnail
                    @Html.ValidationMessageFor(model => model.thumbnail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.documentUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="documentfile" />@Model.documentUrl
                    @Html.ValidationMessageFor(model => model.thumbnail, "", new { @class = "text-danger" })
                </div>
            </div>


            if (Request.IsAuthenticated)
            {
                <hr/>
                <br />
                <h3>Dokumentgodkjenning</h3>
                <div class="form-group">
                    @Html.LabelFor(model => model.Accepted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-1">
                        @Html.RadioButtonFor(m => m.Accepted, "true") Ja
                    </div>
                    <div class="col-md-1">
                        @Html.RadioButtonFor(m => m.Accepted, "false") Nei
                    </div>
                </div>

                <div class="form-group input-accepted">
                    @Html.LabelFor(model => model.dateAccepted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dateAccepted, DateTime.Today.ToString(), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dateAccepted, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group input-accepted">
                    @Html.LabelFor(model => model.approvalDocument, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.approvalDocument, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.approvalDocument, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group input-accepted">
                    @Html.LabelFor(model => model.approvalReference, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.approvalReference, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.approvalReference, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.statusId, "Status:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="Lagre" class="btn btn-default pull-right" />
        @if (Model.register.parentRegisterId != null)
        {
            <a href="/subregister/versjoner/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname">Tilbake</a>
        }
        else
        {
            <a href="/register/versjoner/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname/">Tilbake</a>
        }
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
