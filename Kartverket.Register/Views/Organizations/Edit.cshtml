@model Kartverket.Register.Models.Organization
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Rediger " + Model.name;
}

@section breadcrumb {

    @foreach (var register in HtmlHelperExtensions.registers(Model.register))
    {
        <li><a href="@register.GetObjectUrl()">@register.name</a></li>
    }
    <li><a href="@Model.register.GetObjectUrl()">@Html.DisplayFor(model => model.register.name)</a></li>
    <li><a href="@Model.GetObjectUrl()">@Html.DisplayFor(model => model.name)</a></li>
    <li>Rediger</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                Rediger @Model.name
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@using (Html.BeginForm("Edit", "Organizations", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.systemId)
        @Html.HiddenFor(model => model.registerId)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shortname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shortname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shortname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.logoFilename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="SubmitterID">Innsender: </label>
            <div class="col-md-10">
                @Html.DropDownList("SubmitterID", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.submitterId)
            </div>
        </div>

        @if (Request.IsAuthenticated)
        {
            if (HtmlHelperExtensions.IsAdmin())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.statusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }
        <hr />
        <h3>Kontaktperson</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.epost, htmlAttributes: new { @title = "Epost til kontaktperson", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.epost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.epost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.member, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.member, "true") Ja
                </div>
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.member, "false") Nei
                </div>
                @Html.ValidationMessageFor(model => model.member, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        <h3>Dokumenter</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.agreementDocumentUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrWhiteSpace(Model.agreementDocumentUrl))
                {
                    <a href="@Model.agreementDocumentUrl"><span class="glyphicon glyphicon-file" title="Link til avtaledokument for @Model.name" style="font-size:15px"></span>@Model.agreementDocumentUrl</a>
                }
                <input type="file" name="agreementDocument" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.agreementYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.agreementYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.agreementYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.priceFormDocument, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrWhiteSpace(Model.agreementDocumentUrl))
                {
                    <a href="@Model.priceFormDocument"><span class="glyphicon glyphicon-file" title="Link til prisskjema/kalkulator for @Model.name" style="font-size:15px"></span>@Model.priceFormDocument</a>
                }
                <input type="file" name="priceformDocument" />
            </div>
        </div>

        <hr />
        <h3>Logo</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.logoFilename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <br />
                <p><img src="@Url.Content("~/data/organizations/" +  Model.logoFilename)" /></p>
                <input type="file" name="fileSmal" />
                @Html.ValidationMessageFor(model => model.logoFilename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.largeLogo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <br />
                <p><img src="@Url.Content("~/data/organizations/" +  Model.largeLogo)" /></p>
                <input type="file" name="fileLarge" />
                @Html.ValidationMessageFor(model => model.largeLogo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="Lagre" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">Tilbake</a>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
