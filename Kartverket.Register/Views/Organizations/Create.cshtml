@model Kartverket.Register.Models.Organization
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Foreslå ny organisasjon";
}

@section breadcrumb {

    @foreach (var register in HtmlHelperExtensions.registers(Model.register))
    {
        <li><a href="@register.GetObjectUrl()">@register.name</a></li>
    }
    <li><a href="@Model.register.GetObjectUrl()">@Html.DisplayFor(model => model.register.name)</a></li>
    <li>Ny</li>
}
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                Ny Organisasjon
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@using (Html.BeginForm("Create", "Organizations", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    if (Model.register.parentRegister != null)
    {
        <input type="hidden" value="@Model.register.parentRegister.seoname" id="registerParent" name="registerParent" />
    }
    <input type="hidden" value="@Model.register.seoname" id="registername" name="registername" />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shortname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shortname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.shortname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.logoFilename, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr/>
        <h3>Kontaktperson</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.epost, htmlAttributes: new { @title = "Epost til kontaktperson", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.epost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.epost, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.member, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.member, "true") Ja
                </div>
                <div class="col-md-1">
                    @Html.RadioButtonFor(m => m.member, "false") Nei
                </div>
                @Html.ValidationMessageFor(model => model.member, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <hr />
        <h3>Dokumenter</h3>        

        <div class="form-group">
            @Html.LabelFor(model => model.agreementDocumentUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="agreementDocument" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.agreementYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.agreementYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.agreementYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.priceFormDocument, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="priceformDocument" />
            </div>
        </div>

        <hr />
        <h3>Logo</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.logoFilename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileSmal" />
                @Html.ValidationMessageFor(model => model.logoFilename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.largeLogo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileLarge" />
                @Html.ValidationMessageFor(model => model.largeLogo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="Foreslå" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">Tilbake</a>
    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
