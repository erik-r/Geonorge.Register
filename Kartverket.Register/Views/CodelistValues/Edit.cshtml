@model Kartverket.Register.Models.CodelistValue
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Rediger " + Model.name;
}

@section breadcrumb {
    @if (Model.register.parentRegister != null)
    {
        Kartverket.Register.Models.Register mainRegister = HtmlHelperExtensions.mainRegister(Model.register);
        Kartverket.Register.Models.Register parentRegister = Model.register.parentRegister;
        <li><a href="/register/@mainRegister.seoname/">@mainRegister.name</a></li>
        <li><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname">@Model.register.name</a></li>
        <li>Rediger</li>
        while (parentRegister != null && parentRegister != mainRegister)
        {
            <li><a href="/subregister/@parentRegister.parentRegister.seoname/@parentRegister.parentRegister.owner.seoname/@parentRegister.seoname">@parentRegister.name</a></li>
            parentRegister = parentRegister.parentRegister;
        }
    }
    else
    {
        <li><a href="/register/@Model.register.seoname">@Model.register.name</a></li>
        <li>Rediger</li>
    }
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>
                Rediger @Model.name
            </h2>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<form action="@Request.Url.LocalPath" method="post">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.systemId)
    @Html.HiddenFor(model => model.registerId)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.submitterId, "Innsender", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="custom-select">
                    @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control chosen-select" })
                </div>
                @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Request.IsAuthenticated)
        {
            if (HtmlHelperExtensions.IsAdmin())
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.statusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 chosen-container-single chosen-container-single-nosearch">
                        @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (HtmlHelperExtensions.IsAdmin())
        {
            <hr />
            <h4>Hierarkiske kodelister</h4>
            <small>Velg hvilke kodeverdier som skal ligge over og under kodeverdien i hierarkiet</small>
            <br /><br />
            <div class="form-group">
                @Html.LabelFor(model => model.broaderItem, "Mer generelt begrep", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="dropdown">
                        <select name="broader" class="form-control searchbar dropdown" data-toggle="dropdown">
                            <option selected="selected"></option>
                            @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                            {
                                <optgroup label="@register.name">
                                    @foreach (var code in register.items.OrderBy(c => c.name))
                                    {
                                        if (Model.broaderItemId != null)
                                        {
                                            if (Model.broaderItem.systemId == code.systemId)
                                            {
                                                <option selected="selected" value="@code.systemId">@code.name</option>
                                            }
                                            else
                                            {
                                                <option value="@code.systemId">@code.name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="@code.systemId">@code.name</option>
                                        }

                                    }
                                </optgroup>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.narrowerItems, "Mer spesialiserte begrep", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="narrower" data-placeholder="velg kodeverdier" multiple class="chosen-select form-control" tabindex="18" id="multiple-label-example">
                        @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                        {
                            <optgroup label="@register.name">
                                @foreach (var code in register.items.OrderBy(c => c.name))
                                {
                                    Guid? narrower = null;
                                    foreach (var narrowerItem in Model.narrowerItems)
                                    {
                                        if (code.systemId == narrowerItem.systemId)
                                        {
                                            <option selected="selected" value="@code.systemId">@code.name</option>
                                            narrower = narrowerItem.systemId;
                                            break;
                                        }
                                    }
                                    if (narrower == null)
                                    {
                                        <option value="@code.systemId">@code.name</option>
                                    }
                                }
                            </optgroup>
                        }
                    </select>
                    <p class="small">Hold Ctrl inne for å velge flere før listen lukkes</p>
                </div>
            </div>
        }

    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="Lagre" class="btn btn-default pull-right" />
        <a href="@Model.GetObjectUrl()">Tilbake</a>
    </div>
</form>
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
