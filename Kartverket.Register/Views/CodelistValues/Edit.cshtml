@model Kartverket.Register.Models.CodelistValue
﻿@using Kartverket.Register.Helpers

@{
    ViewBag.Title = "Rediger " + Model.name;
}

@section breadcrumb {

    @if (Model.register.parentRegisterId != null)
    {
        Kartverket.Register.Models.Register mainRegister = HtmlHelperExtensions.mainRegister(Model.register);
        Kartverket.Register.Models.Register parentRegister = Model.register.parentRegister;
        <li><a href="/register/@mainRegister.seoname/">@mainRegister.name</a></li>
        <li class="active pull-right">Rediger</li>
        <li class="pull-right"><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname">@Model.name</a></li>
        <li class="pull-right"><a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname">@Model.register.name</a></li>
        while (parentRegister != null && parentRegister != mainRegister)
        {
            <li class="pull-right"><a href="/subregister/@parentRegister.parentRegister.seoname/@parentRegister.parentRegister.owner.seoname/@parentRegister.seoname">@parentRegister.name</a></li>
            parentRegister = parentRegister.parentRegister;
        }
    }
    else
    {
        <li><a href="/register/@Model.register.seoname">@Html.DisplayFor(model => model.register.name)</a></li>
        <li><a href="/register/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname">@Html.DisplayFor(model => model.name)</a></li>
        <li class="active">Rediger</li>
    }
}

<h2>Rediger</h2>
<h4>@Model.name</h4>
<hr />

@using (Html.BeginForm("Edit", "CodelistValues", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.systemId)
    @Html.HiddenFor(model => model.registerId)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ErrorMessage")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.submitterId, "submitterId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("submitterId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.submitterId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Request.IsAuthenticated)
        {
            if (Html.IsGeonorgeAdmin(System.Security.Claims.ClaimsPrincipal.Current.Claims))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.statusId, "statusId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 chosen-container chosen-container-single chosen-container-single-nosearch">
                        @Html.DropDownList("statusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.statusId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.value, "", new { @class = "text-danger" })
            </div>
        </div>


        @if (Html.IsGeonorgeAdmin(System.Security.Claims.ClaimsPrincipal.Current.Claims))
        {
            
            <hr />
            <h4>Hierarkiske kodelister</h4>
            <small>Velg hvilke kodeverdier som skal ligge over og under kodeverdien i hierarkiet</small>
            <br /><br />
            <div class="form-group">
                @Html.LabelFor(model => model.broaderItemId, "broaderItems", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="dropdown">
                        <select class="form-control searchbar dropdown" data-toggle="dropdown">

                            <option value="">--Velg broaderitem--</option>

                            @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                            {
                                <optgroup label="@register.name">
                                    @foreach (var code in register.items.OrderBy(c => c.name))
                                    {
                                        <option value="@code.systemId">@code.name</option>
                                    }
                                </optgroup>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.broaderItemId, "narrowerItems", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select data-placeholder="velg kodeverdier" multiple class="form-control" tabindex="18" id="multiple-label-example">
                        <option value=""></option>
                        @foreach (var register in HtmlHelperExtensions.CodelistRegister())
                        {
                            <optgroup label="@register.name">
                                @foreach (var code in register.items.OrderBy(c => c.name))
                                {
                                    <option value="@code.systemId">@code.name</option>
                                }
                            </optgroup>
                        }
                    </select>
                    <p class="small">Hold Ctrl inne for å velge flere før listen lukkes</p>
                </div>
            </div>
        }

    </div>
    <div class="form-group">
        <hr />
        <input type="submit" value="Lagre" class="btn btn-default pull-right" />
        @if (Model.register.parentRegisterId != null)
        {
            <a href="/subregister/@Model.register.parentRegister.seoname/@Model.register.parentRegister.owner.seoname/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname">Tilbake</a>
        }
        else
        {
            <a href="/register/@Model.register.seoname/@Model.submitter.seoname/@Model.seoname/">Tilbake</a>
        }
    </div>
}

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}