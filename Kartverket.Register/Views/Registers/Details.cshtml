@model Register
@using Kartverket.Register.Helpers
@using PagedList
@using Kartverket.Register.Models
@{
    ViewBag.Title = @Model.name;
    Register mainRegister = HtmlHelperExtensions.mainRegister(Model);
    Register parent = Model.parentRegister;
    string parentRegister = HtmlHelperExtensions.HasParent(Model);
    string municipalityCode = ViewBag.selectedMunicipalityCode;
    Organization municipality = ViewBag.organizationMunicipality;
}

@section breadcrumb {

    @foreach (var register in HtmlHelperExtensions.registers(Model))
    {
        <li><a href="@register.GetObjectUrl()">@register.name</a></li>
    }
    <li>@Model.name</li>
}

@{
    var page = ViewBag.page;
    var sortering = Model.items.OrderBy(o => o.name).ToList();
    var sorteringRegister = Model.subregisters.OrderByDescending(s => s.name).ToList();
    int pageSize = 50;
    int pageNumber = (page ?? 1);

    if (Model.containedItemClassIsRegister())
    {
        sorteringRegister = HtmlHelperExtensions.SortingRegisters(Model, ViewBag.SortOrder);
    }
    else
    {
        sortering = HtmlHelperExtensions.SortingRegisterItems(Model, ViewBag.SortOrder);
    }
}
@section Scripts {
    <script>
        $(function () {
            var menu_state = localStorage.setItem("navtabselected", "gjeldende");
        }
    )
    </script>
}

@Html.Partial("_SearchBarPartial")
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                @Html.DisplayFor(model => model.name)
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

<div class="row">
    <div class="col-no-padding-xs col-xs-12 col-sm-10 col-md-10 col-lg-10">
        @if (Model.description != null)
            {
            <p>
                @Html.DisplayFor(model => model.description)
                @if (Model.IsDokMunicipal())
                {
                    <br />
                    @Html.Raw(HtmlHelperExtensions.GetDOKMunicipalConfirmationText(municipality));
                }
            </p>
        }
        @if (Model.IsServiceAlertRegister())
        {
            if (!Request.IsAuthenticated)
            {
                <span><a href="@Url.Action("SignIn", "AuthServices")"> Logg inn</a> for å legge til nye varsler.</span><br />
            }
            <a href="@RegisterUrls.urlFormat(Request, "atom")" class="">Abonnere på tjenestevarsler</a><br />
        }
    </div>

    <div class="col-no-padding-xs col-xs-12 col-sm-3 col-md-2 col-lg-2 text-right">
        <span class="small">@Registers.Updated: @Html.DisplayFor(model => model.modified)</span><br />
    </div>

    <div class="search-result-navigation register-navigation">
        <div class="col-md-4">
            @if (Model.containedItemClassIsRegister())
            {
                @Html.Partial("_pagedListPagerSubRegisters", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else {
                @Html.Partial("_pagedListPager", sortering.ToPagedList(pageNumber, pageSize))
            }
        </div>
        <div class="col-md-4">
            @Html.Partial("_otherformats")
        </div>
        <div class="col-md-3 col-md-offset-1">
            @Html.Partial("_LayoutSelect")
        </div>
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        @if (Model.containedItemClassIsOrganization())
            {
            @Html.Partial("_organization", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsCodelistValue())
            {
            @Html.Partial("_codelistValue", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsDocument())
            {
            @Html.Partial("_documents", sortering.ToPagedList(pageNumber, pageSize));
            }
        @if (Model.containedItemClassIsDataset())
            {
            @Html.Partial("_dataset", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsEPSG())
            {
            @Html.Partial("_epsg", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsNameSpace())
            {
            @Html.Partial("_nameSpace", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsServiceAlert())
            {
            @Html.Partial("_serviceAlert", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.containedItemClassIsRegister())
            {
            @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
        }
    </div>
    <div class="clearfix"></div>
    <div class="col-sm-12 col-md-12 col-lg-12">
        @if (Model.containedItemClassIsRegister())
            {
            @Html.Partial("_pagedListPagerSubRegisters", sorteringRegister.ToPagedList(pageNumber, pageSize))
        }
        else {
            @Html.Partial("_pagedListPager", sortering.ToPagedList(pageNumber, pageSize))
        }
    </div>


    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 hidden-print">
        @if (Request.IsAuthenticated)
            {
                if (HtmlHelperExtensions.Access(Model))
                {
                    if (Model.IsDokMunicipal())
                    {
                        if (municipalityCode != null)
                        {
                            if (HtmlHelperExtensions.AccessEditDOKMunicipalBySelectedMunicipality(municipalityCode))
                            {
                            <a href="/dok/kommunalt/@municipalityCode/rediger" class="btn btn-default btn-space pull-right">Rediger liste</a>
                            <a class="btn btn-default btn-space pull-right" href="@Model.GetObjectCreateUrl(municipalityCode)">@Shared.Add</a>
                        }
                    }
                }
                else {
                    <a class="btn btn-default btn-space pull-right" href="@Model.GetObjectCreateUrl()">@Shared.Add</a>
                }
            }
            if (HtmlHelperExtensions.IsAdmin() && !Model.IsServiceAlertRegister())
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetEditObjectUrl()">@Shared.Edit</a>
            }
        }

        @if (Model.HasParentRegister())
            {
            <a class="hidden-print show-loading-animation" data-loading-message="Henter innhold" href="@Model.parentRegister.GetObjectUrl()">@Shared.Back</a>
        }
        else {
            <a class="hidden-print show-loading-animation" data-loading-message="Henter innhold" href="/">@Shared.Back</a>
        }
    </div>
</div>