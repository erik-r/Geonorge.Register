@model Kartverket.Register.Models.ViewModels.RegisterVeiwModel
﻿@using Kartverket.Register.Helpers
@using PagedList;

@{
    ViewBag.Title = @Model.register.name;
}

@section breadcrumb {
    <li class="active">@Html.DisplayFor(model => model.register.name)</li>
}

<script>
    $(function () {
        var menu_state = localStorage.setItem("navtabselected", "gjeldende");
    }
)
</script>

<div class="page-header">
    <h2 class="h-md" id="registerName">@Html.DisplayFor(model => model.register.name)</h2>
    <hr>
</div>
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    <div class="col-no-padding-xs col-xs-12 col-sm-10 col-md-10 col-lg-10">
        ID: <a href="/register/@Model.register.seoname">http://@Request.Url.Host@Request.Url.LocalPath </a>
        <p>
            @Html.DisplayFor(model => model.register.description)
        </p>

    </div>
    <div class="col-no-padding-xs col-xs-12 col-sm-3 col-md-2 col-lg-2">
        <span class="small">Registrert: @Html.DisplayFor(model => model.register.dateSubmitted)</span><br />
        <span class="small">Oppdatert: @Html.DisplayFor(model => model.register.modified)</span>
    </div>

    @{
        var page = ViewBag.page;
        var currentFilter = ViewBag.currentFilter;
        var sortering = Model.registerItems.OrderBy(o => o.name).ToList();
        var sorteringRegister = Model.register.subregisters.OrderByDescending(s => s.name).ToList();
        int pageSize = 50;
        int pageNumber = (page ?? 1);

        if (Model.register.containedItemClass != "Register")
        {
            sortering = HtmlHelperExtensions.SortingRegisterItems(Model.registerItems, ViewBag.SortOrder);
        }
        else
        {
            sorteringRegister = HtmlHelperExtensions.SortingRegisters(Model.register, ViewBag.SortOrder);
        }
    }



    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="page-header">
            <hr>
        </div>

        @if (Model.register.containedItemClass == "Organization")
        {
            @Html.Partial("_organization", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.register.containedItemClass == "CodelistValue")
        {
            @Html.Partial("_codelistValue", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.register.containedItemClass == "Document")
        {
            @Html.Partial("_documents", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.register.containedItemClass == "Dataset")
        {
            @Html.Partial("_dataset", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.register.containedItemClass == "EPSG")
        {
            @Html.Partial("_epsg", sortering.ToPagedList(pageNumber, pageSize))
        }
        @if (Model.register.containedItemClass == "Register")
        {
            if (ViewBag.SortOrder == "name_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "submitter")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "submitter_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "status")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "status_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "dateSubmitted")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "dateSubmitted_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "modified")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "modified_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "dateAccepted")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else if (ViewBag.SortOrder == "dateAccepted_desc")
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
            else
            {
                @Html.Partial("_subregister", sorteringRegister.ToPagedList(pageNumber, pageSize))
            }
        }
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <a href="/">Tilbake</a>

        @if (Request.IsAuthenticated)
        {
            if (Html.IsGeonorgeAdmin(System.Security.Claims.ClaimsPrincipal.Current.Claims) || Html.IsGeonorgeEditor(System.Security.Claims.ClaimsPrincipal.Current.Claims))
            {
                if (Model.register.containedItemClass == "Document")
                {
                    <a href="/dokument/@Model.register.seoname/ny">| Foreslå nytt dokument i @Model.register.name </a>
                }
                if (Model.register.containedItemClass == "CodelistValue")
                {
                    <a href="/kodeliste/@Model.register.seoname/ny">| Foreslå ny kode i @Model.register.name </a>
                }
                if (Model.register.containedItemClass == "Register")
                {
                    <a href="/subregister/@Model.register.seoname/ny">| Foreslå nytt register i @Model.register.name </a>
                }
            }
            if (Html.IsGeonorgeAdmin(System.Security.Claims.ClaimsPrincipal.Current.Claims))
            {
                if (Model.register.containedItemClass == "Organization")
                {
                    <a href="/organisasjoner/@Model.register.seoname/ny">| Foreslå ny organisasjon i @Model.register.name </a>
                }
                if (Model.register.containedItemClass == "Dataset")
                {
                    <a href="/dataset/@Model.register.seoname/ny">| Foreslå nytt datasett i @Model.register.name </a>
                } if (Model.register.containedItemClass == "EPSG")
                {
                    <a href="/epsg-koder/ny">| Foreslå ny epsg kode i @Model.register.name </a>
                }
                <span>| </span><a href="/endre/@Model.register.seoname">Endre</a>
                <span>| </span><a href="/slett/@Model.register.seoname">Slett</a>
            }
        }
    </div>
</div>


