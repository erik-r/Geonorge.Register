@using Kartverket.Register.Helpers
@using Kartverket.Register.Models
@using Kartverket.Register.Models.ViewModels
@model RegisterItemV2ViewModel

@{
    ViewBag.Title = @Model.Name;
}

@section breadcrumb {
    <li><a href="@Model.Register.GetObjectUrl()">@Model.Register.NameTranslated()</a></li>
    <li>@Model.Name</li>
}

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>
                @Model.Name
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>
<div class="row">
    <article class="col-xs-12 col-sm-12 col-md-10 col-lg-10">
        @if (Model.Register.containedItemClass != "NameSpace")
        { <p> @Model.Description</p>}
        @if (Model.Register.containedItemClass != "Dataset" && Model.Register.containedItemClass != "InspireDataset")
        { <span title="@Html.Raw(HtmlHelperExtensions.StatusBeskrivelse(Model.Register))">Status: @Model.Status.description <i class="statusIcon-@Model.StatusId"></i></span><br>}

        @if (Model.Register.containedItemClass == "NameSpace")
        { <span>@Registers.Owner: @Model.Submitter.name</span><br>}
        else
        {<span>@Registers.Submitter: @Model.Submitter.name</span><br>}

        @if (Model.Owner != null)
        { <span>@Registers.Owner: @Model.Owner.name</span><br />}

        <span>@Html.DisplayNameFor(m => m.VersionNumber) @Model.VersionNumber</span><br>
        @if (Model.VersionName != null)
        {<span>@Html.DisplayNameFor(model => model.VersionName): @Model.VersionName</span><br />}

    </article>
    <article class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
        <span class="small">@Registers.Updated: @Html.DisplayFor(model => model.Modified)</span>
        @if (Model.Register.containedItemClass != "Dataset")
        {
            if (Model.DateAccepted != null)
            {
                <span class="small">@Html.DisplayNameFor(model => model.DateAccepted): @Html.DisplayFor(modelItem => Model.DateAccepted)</span>
            }
            if (Model.DateSuperseded != null)
            {
                <br /><span class="small">@Html.DisplayNameFor(model => model.DateSuperseded): @Html.DisplayFor(modelItem => Model.DateSuperseded)</span>
            }
            if (Model.DateRetired != null)
            {
                <br /><span class="small">@Html.DisplayNameFor(model => model.DateRetired): @Html.DisplayFor(modelItem => Model.DateRetired)</span>
            }
            if (Model.DateNotAccepted != null)
            {
                <br /><span class="small">@Html.DisplayNameFor(model => model.DateNotAccepted): @Html.DisplayFor(modelItem => Model.DateNotAccepted)</span>
            }
        }
    </article>
    <hr>
</div>

<div class="row">
    @if (Model is InspireDatasetViewModel)
    {
        @Html.Partial("_detailsInspireDataset")
    }
    else if (Model is GeodatalovDatasetViewModel)
    {
        @Html.Partial("_detailsGeodatalovDataset")
    }
    else if (Model.RegisterItem is Dataset)
    {
        @Html.Partial("_detailsDataset", (Dataset)Model.RegisterItem)
    }
    else if (Model.RegisterItem is Organization)
    {
        @Html.Partial("_detailsOrganization", (Organization)Model.RegisterItem)
    }
    else if (Model.RegisterItem is Document)
    {
        @Html.Partial("_detailsDocuments", (Document)Model.RegisterItem)
    }
    else if (Model.RegisterItem is EPSG)
    {
        @Html.Partial("_detailsEpsg", (EPSG)Model.RegisterItem)
    }
    else if (Model.RegisterItem is CodelistValue)
    {
        @Html.Partial("_detailsCodelistValue", (CodelistValue)Model.RegisterItem)
    }
    else if (Model.RegisterItem is NameSpace)
    {
        @Html.Partial("_detailsNameSpace", (NameSpace)Model.RegisterItem)
    }
    else if (Model.RegisterItem is ServiceAlert)
    {
        @Html.Partial("_detailsServiceAlert", (ServiceAlert)Model.RegisterItem)
    }
</div>

<div class="hidden-print">
    <hr />

    @if (Request.IsAuthenticated)
    {
        if (!Model.Register.IsServiceAlertRegister())
        {
            if (HtmlHelperExtensions.Access(Model))
            {
                <a class="btn btn-default btn-space pull-right" href="@Model.GetObjectEditUrl()">@Shared.Edit</a>
                    <a class="btn btn-default btn-space pull-right" href="@Model.GetObjectDeleteUrl()">@Shared.Delete</a>
            }
        }
    }

    <a class="hidden-print" href="@Model.Register.GetObjectUrl()">@Shared.Back</a>

</div>