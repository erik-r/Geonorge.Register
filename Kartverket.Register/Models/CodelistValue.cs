///////////////////////////////////////////////////////////
//  CodelistValue.cs
//  Implementation of the Class CodelistValue
//  Generated by Enterprise Architect
//  Created on:      24-nov-2014 22:43:34
//  Original author: Tor Kjetil
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Kartverket.Register.Models.Translations;

namespace Kartverket.Register.Models
{
	public class CodelistValue : RegisterItem {
        public CodelistValue() 
        {
            this.narrowerItems = new HashSet<CodelistValue>();
            this.Translations = new TranslationCollection<CodelistValueTranslation>();
        }
        public const string DataDirectory = "codelistImport/";
        [Display(Name = "Kodeverdi")]        
        public string value { get; set; }

        [ForeignKey("broaderItem")]
        public Guid? broaderItemId { get; set; }
        public virtual RegisterItem broaderItem { get; set; }

        public virtual ICollection<CodelistValue> narrowerItems { get; set; }

        public virtual TranslationCollection<CodelistValueTranslation> Translations { get; set; }

        public void AddMissingTranslations()
        {
            Translations.AddMissingTranslations();
        }


        public virtual string GetCodelistValueEditUrl()
        {
            if (register.parentRegister == null)
            {
                return "/kodeliste/" + register.seoname + "/" + submitter.seoname + "/" + seoname + "/rediger";
            }
            else {
                return "/kodeliste/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/" + submitter.seoname + "/" + seoname + "/rediger";
            }
        }

        public virtual string GetCodelistValueDeleteUrl()
        {
            if (register.parentRegister == null)
            {
                return "/kodeliste/" + register.seoname + "/" + submitter.seoname + "/" + seoname + "/slett";
            }
            else {
                return "/kodeliste/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/" + submitter.seoname + "/" + seoname + "/slett";
            }
        }

        public string GetImportUrl()
        {
            if (register.parentRegister != null)
            {
                return "/kodeliste/" + register.parentRegister.seoname + "/" + register.owner.seoname + "/" + register.seoname + "/ny/import";
            }
            else
            {
                return "/kodeliste/" + register.seoname + "/ny/import";
            }
        }

        internal void InitializeNewCodelistValue()
        {
            InitializeNew();
        }
    }//end CodelistValue

}//end namespace Datamodell